{"ast":null,"code":"\"use strict\";\n\nvar utils = require(\"./utils\");\n\nvar call_api = require(\"./api_client/call_api\");\n\nvar extend = utils.extend,\n    pickOnlyExistingValues = utils.pickOnlyExistingValues;\nvar TRANSFORMATIONS_URI = \"transformations\";\n\nfunction deleteResourcesParams(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return extend(params, pickOnlyExistingValues(options, \"keep_original\", \"invalidate\", \"next_cursor\", \"transformations\"));\n}\n\nfunction getResourceParams(options) {\n  return pickOnlyExistingValues(options, \"exif\", \"cinemagraph_analysis\", \"colors\", \"derived_next_cursor\", \"faces\", \"image_metadata\", \"pages\", \"phash\", \"coordinates\", \"max_results\", \"versions\", \"accessibility_analysis\");\n}\n\nexports.ping = function ping(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return call_api(\"get\", [\"ping\"], {}, callback, options);\n};\n\nexports.usage = function usage(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var uri = [\"usage\"];\n\n  if (options.date) {\n    uri.push(options.date);\n  }\n\n  return call_api(\"get\", uri, {}, callback, options);\n};\n\nexports.resource_types = function resource_types(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return call_api(\"get\", [\"resources\"], {}, callback, options);\n};\n\nexports.resources = function resources(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type;\n  uri = [\"resources\", resource_type];\n\n  if (type != null) {\n    uri.push(type);\n  }\n\n  if (options.start_at != null && Object.prototype.toString.call(options.start_at) === '[object Date]') {\n    options.start_at = options.start_at.toUTCString();\n  }\n\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"prefix\", \"tags\", \"context\", \"direction\", \"moderations\", \"start_at\", \"metadata\"), callback, options);\n};\n\nexports.resources_by_tag = function resources_by_tag(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"tags\", tag];\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"tags\", \"context\", \"direction\", \"moderations\", \"metadata\"), callback, options);\n};\n\nexports.resources_by_context = function resources_by_context(key, value, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = void 0,\n      resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"context\"];\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"tags\", \"context\", \"direction\", \"moderations\", \"metadata\");\n  params.key = key;\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return call_api(\"get\", uri, params, callback, options);\n};\n\nexports.resources_by_moderation = function resources_by_moderation(kind, status, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"moderations\", kind, status];\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"tags\", \"context\", \"direction\", \"moderations\", \"metadata\"), callback, options);\n};\n\nexports.resource_by_asset_id = function resource_by_asset_id(asset_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = [\"resources\", asset_id];\n  return call_api(\"get\", uri, getResourceParams(options), callback, options);\n};\n\nexports.resources_by_ids = function resources_by_ids(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  params = pickOnlyExistingValues(options, \"tags\", \"context\", \"moderations\");\n  params[\"public_ids[]\"] = public_ids;\n  return call_api(\"get\", uri, params, callback, options);\n};\n\nexports.resource = function resource(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type, public_id];\n  return call_api(\"get\", uri, getResourceParams(options), callback, options);\n};\n\nexports.restore = function restore(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  options.content_type = 'json';\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type, \"restore\"];\n  return call_api(\"post\", uri, {\n    public_ids: public_ids,\n    versions: options.versions\n  }, callback, options);\n};\n\nexports.update = function update(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type, public_id];\n  params = utils.updateable_resource_params(options);\n\n  if (options.moderation_status != null) {\n    params.moderation_status = options.moderation_status;\n  }\n\n  return call_api(\"post\", uri, params, callback, options);\n};\n\nexports.delete_resources = function delete_resources(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  return call_api(\"delete\", uri, deleteResourcesParams(options, {\n    \"public_ids[]\": public_ids\n  }), callback, options);\n};\n\nexports.delete_resources_by_prefix = function delete_resources_by_prefix(prefix, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  return call_api(\"delete\", uri, deleteResourcesParams(options, {\n    prefix: prefix\n  }), callback, options);\n};\n\nexports.delete_resources_by_tag = function delete_resources_by_tag(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"tags\", tag];\n  return call_api(\"delete\", uri, deleteResourcesParams(options), callback, options);\n};\n\nexports.delete_all_resources = function delete_all_resources(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  return call_api(\"delete\", uri, deleteResourcesParams(options, {\n    all: true\n  }), callback, options);\n};\n\nexports.delete_derived_resources = function delete_derived_resources(derived_resource_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = void 0;\n  uri = [\"derived_resources\"];\n  return call_api(\"delete\", uri, {\n    \"derived_resource_ids[]\": derived_resource_ids\n  }, callback, options);\n};\n\nexports.delete_derived_by_transformation = function delete_derived_by_transformation(public_ids, transformations, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = \"resources/\" + resource_type + \"/\" + type;\n  params = extend({\n    \"public_ids[]\": public_ids\n  }, pickOnlyExistingValues(options, \"invalidate\"));\n  params.keep_original = true;\n  params.transformations = utils.build_eager(transformations);\n  return call_api(\"delete\", uri, params, callback, options);\n};\n\nexports.tags = function tags(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"tags\", resource_type];\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"prefix\"), callback, options);\n};\n\nexports.transformations = function transformations(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"named\");\n  return call_api(\"get\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.transformation = function transformation(transformationName, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  params.transformation = utils.build_eager(transformationName);\n  return call_api(\"get\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.delete_transformation = function delete_transformation(transformationName, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = {};\n  params.transformation = utils.build_eager(transformationName);\n  return call_api(\"delete\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.update_transformation = function update_transformation(transformationName, updates, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = pickOnlyExistingValues(updates, \"allowed_for_strict\");\n  params.transformation = utils.build_eager(transformationName);\n\n  if (updates.unsafe_update != null) {\n    params.unsafe_update = utils.build_eager(updates.unsafe_update);\n  }\n\n  return call_api(\"put\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.create_transformation = function create_transformation(name, definition, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = {\n    name\n  };\n  params.transformation = utils.build_eager(definition);\n  return call_api(\"post\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.upload_presets = function upload_presets(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return call_api(\"get\", [\"upload_presets\"], pickOnlyExistingValues(options, \"next_cursor\", \"max_results\"), callback, options);\n};\n\nexports.upload_preset = function upload_preset(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = void 0;\n  uri = [\"upload_presets\", name];\n  return call_api(\"get\", uri, {}, callback, options);\n};\n\nexports.delete_upload_preset = function delete_upload_preset(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = void 0;\n  uri = [\"upload_presets\", name];\n  return call_api(\"delete\", uri, {}, callback, options);\n};\n\nexports.update_upload_preset = function update_upload_preset(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0,\n      uri = void 0;\n  uri = [\"upload_presets\", name];\n  params = utils.merge(utils.clear_blank(utils.build_upload_params(options)), pickOnlyExistingValues(options, \"unsigned\", \"disallow_public_id\", \"live\"));\n  return call_api(\"put\", uri, params, callback, options);\n};\n\nexports.create_upload_preset = function create_upload_preset(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = void 0,\n      uri = void 0;\n  uri = [\"upload_presets\"];\n  params = utils.merge(utils.clear_blank(utils.build_upload_params(options)), pickOnlyExistingValues(options, \"name\", \"unsigned\", \"disallow_public_id\", \"live\"));\n  return call_api(\"post\", uri, params, callback, options);\n};\n\nexports.root_folders = function root_folders(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var uri = void 0,\n      params = void 0;\n  uri = [\"folders\"];\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  return call_api(\"get\", uri, params, callback, options);\n};\n\nexports.sub_folders = function sub_folders(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = void 0,\n      params = void 0;\n  uri = [\"folders\", path];\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  return call_api(\"get\", uri, params, callback, options);\n};\n/**\n * Creates an empty folder\n *\n * @param {string}    path      The folder path to create\n * @param {function}  callback  Callback function\n * @param {object}    options   Configuration options\n * @returns {*}\n */\n\n\nexports.create_folder = function create_folder(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = void 0;\n  uri = [\"folders\", path];\n  return call_api(\"post\", uri, {}, callback, options);\n};\n\nexports.delete_folder = function delete_folder(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var uri = void 0;\n  uri = [\"folders\", path];\n  return call_api(\"delete\", uri, {}, callback, options);\n};\n\nexports.upload_mappings = function upload_mappings(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = void 0;\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  return call_api(\"get\", \"upload_mappings\", params, callback, options);\n};\n\nexports.upload_mapping = function upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (name == null) {\n    name = null;\n  }\n\n  return call_api(\"get\", 'upload_mappings', {\n    folder: name\n  }, callback, options);\n};\n\nexports.delete_upload_mapping = function delete_upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"delete\", 'upload_mappings', {\n    folder: name\n  }, callback, options);\n};\n\nexports.update_upload_mapping = function update_upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0;\n  params = pickOnlyExistingValues(options, \"template\");\n  params.folder = name;\n  return call_api(\"put\", 'upload_mappings', params, callback, options);\n};\n\nexports.create_upload_mapping = function create_upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0;\n  params = pickOnlyExistingValues(options, \"template\");\n  params.folder = name;\n  return call_api(\"post\", 'upload_mappings', params, callback, options);\n};\n\nfunction publishResource(byKey, value, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = void 0,\n      resource_type = void 0,\n      uri = void 0;\n  params = pickOnlyExistingValues(options, \"type\", \"invalidate\", \"overwrite\");\n  params[byKey] = value;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"publish_resources\"];\n  options = extend({\n    resource_type: resource_type\n  }, options);\n  return call_api(\"post\", uri, params, callback, options);\n}\n\nexports.publish_by_prefix = function publish_by_prefix(prefix, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return publishResource(\"prefix\", prefix, callback, options);\n};\n\nexports.publish_by_tag = function publish_by_tag(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return publishResource(\"tag\", tag, callback, options);\n};\n\nexports.publish_by_ids = function publish_by_ids(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return publishResource(\"public_ids\", public_ids, callback, options);\n};\n\nexports.list_streaming_profiles = function list_streaming_profiles(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return call_api(\"get\", \"streaming_profiles\", {}, callback, options);\n};\n\nexports.get_streaming_profile = function get_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"get\", \"streaming_profiles/\" + name, {}, callback, options);\n};\n\nexports.delete_streaming_profile = function delete_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"delete\", \"streaming_profiles/\" + name, {}, callback, options);\n};\n\nexports.update_streaming_profile = function update_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0;\n  params = utils.build_streaming_profiles_param(options);\n  return call_api(\"put\", \"streaming_profiles/\" + name, params, callback, options);\n};\n\nexports.create_streaming_profile = function create_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = void 0;\n  params = utils.build_streaming_profiles_param(options);\n  params.name = name;\n  return call_api(\"post\", 'streaming_profiles', params, callback, options);\n};\n\nfunction updateResourcesAccessMode(access_mode, by_key, value, callback) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  params = {\n    access_mode: access_mode\n  };\n  params[by_key] = value;\n  return call_api(\"post\", \"resources/\" + resource_type + \"/\" + type + \"/update_access_mode\", params, callback, options);\n}\n\nexports.search = function search(params, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  options.content_type = 'json';\n  return call_api(\"post\", \"resources/search\", params, callback, options);\n};\n\nexports.update_resources_access_mode_by_prefix = function update_resources_access_mode_by_prefix(access_mode, prefix, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return updateResourcesAccessMode(access_mode, \"prefix\", prefix, callback, options);\n};\n\nexports.update_resources_access_mode_by_tag = function update_resources_access_mode_by_tag(access_mode, tag, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return updateResourcesAccessMode(access_mode, \"tag\", tag, callback, options);\n};\n\nexports.update_resources_access_mode_by_ids = function update_resources_access_mode_by_ids(access_mode, ids, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return updateResourcesAccessMode(access_mode, \"public_ids[]\", ids, callback, options);\n};\n/**\n * Creates a new metadata field definition\n *\n * @see https://cloudinary.com/documentation/admin_api#create_a_metadata_field\n *\n * @param {Object}   field    The field to add\n * @param {Function} callback Callback function\n * @param {Object}   options  Configuration options\n *\n * @return {Object}\n */\n\n\nexports.add_metadata_field = function add_metadata_field(field, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = pickOnlyExistingValues(field, \"external_id\", \"type\", \"label\", \"mandatory\", \"default_value\", \"validation\", \"datasource\");\n  options.content_type = \"json\";\n  return call_api(\"post\", [\"metadata_fields\"], params, callback, options);\n};\n/**\n * Returns a list of all metadata field definitions\n *\n * @see https://cloudinary.com/documentation/admin_api#get_metadata_fields\n *\n * @param {Function} callback Callback function\n * @param {Object}   options  Configuration options\n *\n * @return {Object}\n */\n\n\nexports.list_metadata_fields = function list_metadata_fields(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return call_api(\"get\", [\"metadata_fields\"], {}, callback, options);\n};\n/**\n * Deletes a metadata field definition.\n *\n * The field should no longer be considered a valid candidate for all other endpoints\n *\n * @see https://cloudinary.com/documentation/admin_api#delete_a_metadata_field_by_external_id\n *\n * @param {String}   field_external_id  The external id of the field to delete\n * @param {Function} callback           Callback function\n * @param {Object}   options            Configuration options\n *\n * @return {Object}\n */\n\n\nexports.delete_metadata_field = function delete_metadata_field(field_external_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"delete\", [\"metadata_fields\", field_external_id], {}, callback, options);\n};\n/**\n * Get a metadata field by external id\n *\n * @see https://cloudinary.com/documentation/admin_api#get_a_metadata_field_by_external_id\n *\n * @param {String}   external_id  The ID of the metadata field to retrieve\n * @param {Function} callback     Callback function\n * @param {Object}   options      Configuration options\n *\n * @return {Object}\n */\n\n\nexports.metadata_field_by_field_id = function metadata_field_by_field_id(external_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"get\", [\"metadata_fields\", external_id], {}, callback, options);\n};\n/**\n * Updates a metadata field by external id\n *\n * Updates a metadata field definition (partially, no need to pass the entire object) passed as JSON data.\n * See {@link https://cloudinary.com/documentation/admin_api#generic_structure_of_a_metadata_field Generic structure of a metadata field} for details.\n *\n * @see https://cloudinary.com/documentation/admin_api#update_a_metadata_field_by_external_id\n *\n * @param {String}   external_id  The ID of the metadata field to update\n * @param {Object}   field        Updated values of metadata field\n * @param {Function} callback     Callback function\n * @param {Object}   options      Configuration options\n *\n * @return {Object}\n */\n\n\nexports.update_metadata_field = function update_metadata_field(external_id, field, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = pickOnlyExistingValues(field, \"external_id\", \"type\", \"label\", \"mandatory\", \"default_value\", \"validation\", \"datasource\");\n  options.content_type = \"json\";\n  return call_api(\"put\", [\"metadata_fields\", external_id], params, callback, options);\n};\n/**\n * Updates a metadata field datasource\n *\n * Updates the datasource of a supported field type (currently only enum and set), passed as JSON data. The\n * update is partial: datasource entries with an existing external_id will be updated and entries with new\n * external_id’s (or without external_id’s) will be appended.\n *\n * @see https://cloudinary.com/documentation/admin_api#update_a_metadata_field_datasource\n *\n * @param {String}   field_external_id    The ID of the field to update\n * @param {Object}   entries_external_id  Updated values for datasource\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\n\n\nexports.update_metadata_field_datasource = function update_metadata_field_datasource(field_external_id, entries_external_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var params = pickOnlyExistingValues(entries_external_id, \"values\");\n  options.content_type = \"json\";\n  return call_api(\"put\", [\"metadata_fields\", field_external_id, \"datasource\"], params, callback, options);\n};\n/**\n * Deletes entries in a metadata field datasource\n *\n * Deletes (blocks) the datasource entries for a specified metadata field definition. Sets the state of the\n * entries to inactive. This is a soft delete, the entries still exist under the hood and can be activated again\n * with the restore datasource entries method.\n *\n * @see https://cloudinary.com/documentation/admin_api#delete_entries_in_a_metadata_field_datasource\n *\n * @param {String}   field_external_id    The ID of the metadata field\n * @param {Array}    entries_external_id  An array of IDs of datasource entries to delete\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\n\n\nexports.delete_datasource_entries = function delete_datasource_entries(field_external_id, entries_external_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  options.content_type = \"json\";\n  var params = {\n    external_ids: entries_external_id\n  };\n  return call_api(\"delete\", [\"metadata_fields\", field_external_id, \"datasource\"], params, callback, options);\n};\n/**\n * Restores entries in a metadata field datasource\n *\n * Restores (unblocks) any previously deleted datasource entries for a specified metadata field definition.\n * Sets the state of the entries to active.\n *\n * @see https://cloudinary.com/documentation/admin_api#restore_entries_in_a_metadata_field_datasource\n *\n * @param {String}   field_external_id    The ID of the metadata field\n * @param {Array}    entries_external_id  An array of IDs of datasource entries to delete\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\n\n\nexports.restore_metadata_field_datasource = function restore_metadata_field_datasource(field_external_id, entries_external_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  options.content_type = \"json\";\n  var params = {\n    external_ids: entries_external_id\n  };\n  return call_api(\"post\", [\"metadata_fields\", field_external_id, \"datasource_restore\"], params, callback, options);\n};\n/**\n * Sorts metadata field datasource. Currently supports only value\n * @param {String}   field_external_id    The ID of the metadata field\n * @param {String}   sort_by              Criteria for the sort. Currently supports only value\n * @param {String}   direction            Optional (gets either asc or desc)\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\n\n\nexports.order_metadata_field_datasource = function order_metadata_field_datasource(field_external_id, sort_by, direction, callback) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  options.content_type = \"json\";\n  var params = {\n    order_by: sort_by,\n    direction: direction\n  };\n  return call_api(\"post\", [\"metadata_fields\", field_external_id, \"datasource\", \"order\"], params, callback, options);\n};","map":{"version":3,"sources":["/home/jacob/Code/taekwondo-bulletin/node_modules/cloudinary/lib-es5/api.js"],"names":["utils","require","call_api","extend","pickOnlyExistingValues","TRANSFORMATIONS_URI","deleteResourcesParams","options","params","arguments","length","undefined","getResourceParams","exports","ping","callback","usage","uri","date","push","resource_types","resources","resource_type","type","start_at","Object","prototype","toString","call","toUTCString","resources_by_tag","tag","resources_by_context","key","value","resources_by_moderation","kind","status","resource_by_asset_id","asset_id","resources_by_ids","public_ids","resource","public_id","restore","content_type","versions","update","updateable_resource_params","moderation_status","delete_resources","delete_resources_by_prefix","prefix","delete_resources_by_tag","delete_all_resources","all","delete_derived_resources","derived_resource_ids","delete_derived_by_transformation","transformations","keep_original","build_eager","tags","transformation","transformationName","delete_transformation","update_transformation","updates","unsafe_update","create_transformation","name","definition","upload_presets","upload_preset","delete_upload_preset","update_upload_preset","merge","clear_blank","build_upload_params","create_upload_preset","root_folders","sub_folders","path","create_folder","delete_folder","upload_mappings","upload_mapping","folder","delete_upload_mapping","update_upload_mapping","create_upload_mapping","publishResource","byKey","publish_by_prefix","publish_by_tag","publish_by_ids","list_streaming_profiles","get_streaming_profile","delete_streaming_profile","update_streaming_profile","build_streaming_profiles_param","create_streaming_profile","updateResourcesAccessMode","access_mode","by_key","search","update_resources_access_mode_by_prefix","update_resources_access_mode_by_tag","update_resources_access_mode_by_ids","ids","add_metadata_field","field","list_metadata_fields","delete_metadata_field","field_external_id","metadata_field_by_field_id","external_id","update_metadata_field","update_metadata_field_datasource","entries_external_id","delete_datasource_entries","external_ids","restore_metadata_field_datasource","order_metadata_field_datasource","sort_by","direction","order_by"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar utils = require(\"./utils\");\nvar call_api = require(\"./api_client/call_api\");\n\nvar extend = utils.extend,\n    pickOnlyExistingValues = utils.pickOnlyExistingValues;\n\n\nvar TRANSFORMATIONS_URI = \"transformations\";\n\nfunction deleteResourcesParams(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return extend(params, pickOnlyExistingValues(options, \"keep_original\", \"invalidate\", \"next_cursor\", \"transformations\"));\n}\n\nfunction getResourceParams(options) {\n  return pickOnlyExistingValues(options, \"exif\", \"cinemagraph_analysis\", \"colors\", \"derived_next_cursor\", \"faces\", \"image_metadata\", \"pages\", \"phash\", \"coordinates\", \"max_results\", \"versions\", \"accessibility_analysis\");\n}\n\nexports.ping = function ping(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return call_api(\"get\", [\"ping\"], {}, callback, options);\n};\n\nexports.usage = function usage(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var uri = [\"usage\"];\n\n  if (options.date) {\n    uri.push(options.date);\n  }\n\n  return call_api(\"get\", uri, {}, callback, options);\n};\n\nexports.resource_types = function resource_types(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return call_api(\"get\", [\"resources\"], {}, callback, options);\n};\n\nexports.resources = function resources(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type;\n  uri = [\"resources\", resource_type];\n  if (type != null) {\n    uri.push(type);\n  }\n  if (options.start_at != null && Object.prototype.toString.call(options.start_at) === '[object Date]') {\n    options.start_at = options.start_at.toUTCString();\n  }\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"prefix\", \"tags\", \"context\", \"direction\", \"moderations\", \"start_at\", \"metadata\"), callback, options);\n};\n\nexports.resources_by_tag = function resources_by_tag(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"tags\", tag];\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"tags\", \"context\", \"direction\", \"moderations\", \"metadata\"), callback, options);\n};\n\nexports.resources_by_context = function resources_by_context(key, value, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = void 0,\n      resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"context\"];\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"tags\", \"context\", \"direction\", \"moderations\", \"metadata\");\n  params.key = key;\n  if (value != null) {\n    params.value = value;\n  }\n  return call_api(\"get\", uri, params, callback, options);\n};\n\nexports.resources_by_moderation = function resources_by_moderation(kind, status, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"moderations\", kind, status];\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"tags\", \"context\", \"direction\", \"moderations\", \"metadata\"), callback, options);\n};\n\nexports.resource_by_asset_id = function resource_by_asset_id(asset_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = [\"resources\", asset_id];\n  return call_api(\"get\", uri, getResourceParams(options), callback, options);\n};\n\nexports.resources_by_ids = function resources_by_ids(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  params = pickOnlyExistingValues(options, \"tags\", \"context\", \"moderations\");\n  params[\"public_ids[]\"] = public_ids;\n  return call_api(\"get\", uri, params, callback, options);\n};\n\nexports.resource = function resource(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type, public_id];\n  return call_api(\"get\", uri, getResourceParams(options), callback, options);\n};\n\nexports.restore = function restore(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  options.content_type = 'json';\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type, \"restore\"];\n  return call_api(\"post\", uri, {\n    public_ids: public_ids,\n    versions: options.versions\n  }, callback, options);\n};\n\nexports.update = function update(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type, public_id];\n  params = utils.updateable_resource_params(options);\n  if (options.moderation_status != null) {\n    params.moderation_status = options.moderation_status;\n  }\n  return call_api(\"post\", uri, params, callback, options);\n};\n\nexports.delete_resources = function delete_resources(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  return call_api(\"delete\", uri, deleteResourcesParams(options, {\n    \"public_ids[]\": public_ids\n  }), callback, options);\n};\n\nexports.delete_resources_by_prefix = function delete_resources_by_prefix(prefix, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  return call_api(\"delete\", uri, deleteResourcesParams(options, {\n    prefix: prefix\n  }), callback, options);\n};\n\nexports.delete_resources_by_tag = function delete_resources_by_tag(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"tags\", tag];\n  return call_api(\"delete\", uri, deleteResourcesParams(options), callback, options);\n};\n\nexports.delete_all_resources = function delete_all_resources(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = [\"resources\", resource_type, type];\n  return call_api(\"delete\", uri, deleteResourcesParams(options, {\n    all: true\n  }), callback, options);\n};\n\nexports.delete_derived_resources = function delete_derived_resources(derived_resource_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = void 0;\n  uri = [\"derived_resources\"];\n  return call_api(\"delete\", uri, {\n    \"derived_resource_ids[]\": derived_resource_ids\n  }, callback, options);\n};\n\nexports.delete_derived_by_transformation = function delete_derived_by_transformation(public_ids, transformations, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  uri = \"resources/\" + resource_type + \"/\" + type;\n  params = extend({\n    \"public_ids[]\": public_ids\n  }, pickOnlyExistingValues(options, \"invalidate\"));\n  params.keep_original = true;\n  params.transformations = utils.build_eager(transformations);\n  return call_api(\"delete\", uri, params, callback, options);\n};\n\nexports.tags = function tags(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var resource_type = void 0,\n      uri = void 0;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"tags\", resource_type];\n  return call_api(\"get\", uri, pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"prefix\"), callback, options);\n};\n\nexports.transformations = function transformations(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\", \"named\");\n  return call_api(\"get\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.transformation = function transformation(transformationName, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  params.transformation = utils.build_eager(transformationName);\n  return call_api(\"get\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.delete_transformation = function delete_transformation(transformationName, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = {};\n  params.transformation = utils.build_eager(transformationName);\n  return call_api(\"delete\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.update_transformation = function update_transformation(transformationName, updates, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = pickOnlyExistingValues(updates, \"allowed_for_strict\");\n  params.transformation = utils.build_eager(transformationName);\n  if (updates.unsafe_update != null) {\n    params.unsafe_update = utils.build_eager(updates.unsafe_update);\n  }\n  return call_api(\"put\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.create_transformation = function create_transformation(name, definition, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = { name };\n  params.transformation = utils.build_eager(definition);\n  return call_api(\"post\", TRANSFORMATIONS_URI, params, callback, options);\n};\n\nexports.upload_presets = function upload_presets(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return call_api(\"get\", [\"upload_presets\"], pickOnlyExistingValues(options, \"next_cursor\", \"max_results\"), callback, options);\n};\n\nexports.upload_preset = function upload_preset(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = void 0;\n  uri = [\"upload_presets\", name];\n  return call_api(\"get\", uri, {}, callback, options);\n};\n\nexports.delete_upload_preset = function delete_upload_preset(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = void 0;\n  uri = [\"upload_presets\", name];\n  return call_api(\"delete\", uri, {}, callback, options);\n};\n\nexports.update_upload_preset = function update_upload_preset(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0,\n      uri = void 0;\n  uri = [\"upload_presets\", name];\n  params = utils.merge(utils.clear_blank(utils.build_upload_params(options)), pickOnlyExistingValues(options, \"unsigned\", \"disallow_public_id\", \"live\"));\n  return call_api(\"put\", uri, params, callback, options);\n};\n\nexports.create_upload_preset = function create_upload_preset(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = void 0,\n      uri = void 0;\n  uri = [\"upload_presets\"];\n  params = utils.merge(utils.clear_blank(utils.build_upload_params(options)), pickOnlyExistingValues(options, \"name\", \"unsigned\", \"disallow_public_id\", \"live\"));\n  return call_api(\"post\", uri, params, callback, options);\n};\n\nexports.root_folders = function root_folders(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var uri = void 0,\n      params = void 0;\n  uri = [\"folders\"];\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  return call_api(\"get\", uri, params, callback, options);\n};\n\nexports.sub_folders = function sub_folders(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = void 0,\n      params = void 0;\n  uri = [\"folders\", path];\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  return call_api(\"get\", uri, params, callback, options);\n};\n\n/**\n * Creates an empty folder\n *\n * @param {string}    path      The folder path to create\n * @param {function}  callback  Callback function\n * @param {object}    options   Configuration options\n * @returns {*}\n */\nexports.create_folder = function create_folder(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = void 0;\n  uri = [\"folders\", path];\n  return call_api(\"post\", uri, {}, callback, options);\n};\n\nexports.delete_folder = function delete_folder(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var uri = void 0;\n  uri = [\"folders\", path];\n  return call_api(\"delete\", uri, {}, callback, options);\n};\n\nexports.upload_mappings = function upload_mappings(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = void 0;\n  params = pickOnlyExistingValues(options, \"next_cursor\", \"max_results\");\n  return call_api(\"get\", \"upload_mappings\", params, callback, options);\n};\n\nexports.upload_mapping = function upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (name == null) {\n    name = null;\n  }\n  return call_api(\"get\", 'upload_mappings', {\n    folder: name\n  }, callback, options);\n};\n\nexports.delete_upload_mapping = function delete_upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"delete\", 'upload_mappings', {\n    folder: name\n  }, callback, options);\n};\n\nexports.update_upload_mapping = function update_upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0;\n  params = pickOnlyExistingValues(options, \"template\");\n  params.folder = name;\n  return call_api(\"put\", 'upload_mappings', params, callback, options);\n};\n\nexports.create_upload_mapping = function create_upload_mapping(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0;\n  params = pickOnlyExistingValues(options, \"template\");\n  params.folder = name;\n  return call_api(\"post\", 'upload_mappings', params, callback, options);\n};\n\nfunction publishResource(byKey, value, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = void 0,\n      resource_type = void 0,\n      uri = void 0;\n  params = pickOnlyExistingValues(options, \"type\", \"invalidate\", \"overwrite\");\n  params[byKey] = value;\n  resource_type = options.resource_type || \"image\";\n  uri = [\"resources\", resource_type, \"publish_resources\"];\n  options = extend({\n    resource_type: resource_type\n  }, options);\n  return call_api(\"post\", uri, params, callback, options);\n}\n\nexports.publish_by_prefix = function publish_by_prefix(prefix, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return publishResource(\"prefix\", prefix, callback, options);\n};\n\nexports.publish_by_tag = function publish_by_tag(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return publishResource(\"tag\", tag, callback, options);\n};\n\nexports.publish_by_ids = function publish_by_ids(public_ids, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return publishResource(\"public_ids\", public_ids, callback, options);\n};\n\nexports.list_streaming_profiles = function list_streaming_profiles(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return call_api(\"get\", \"streaming_profiles\", {}, callback, options);\n};\n\nexports.get_streaming_profile = function get_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"get\", \"streaming_profiles/\" + name, {}, callback, options);\n};\n\nexports.delete_streaming_profile = function delete_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"delete\", \"streaming_profiles/\" + name, {}, callback, options);\n};\n\nexports.update_streaming_profile = function update_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0;\n  params = utils.build_streaming_profiles_param(options);\n  return call_api(\"put\", \"streaming_profiles/\" + name, params, callback, options);\n};\n\nexports.create_streaming_profile = function create_streaming_profile(name, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = void 0;\n  params = utils.build_streaming_profiles_param(options);\n  params.name = name;\n  return call_api(\"post\", 'streaming_profiles', params, callback, options);\n};\n\nfunction updateResourcesAccessMode(access_mode, by_key, value, callback) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var params = void 0,\n      resource_type = void 0,\n      type = void 0;\n  resource_type = options.resource_type || \"image\";\n  type = options.type || \"upload\";\n  params = {\n    access_mode: access_mode\n  };\n  params[by_key] = value;\n  return call_api(\"post\", \"resources/\" + resource_type + \"/\" + type + \"/update_access_mode\", params, callback, options);\n}\n\nexports.search = function search(params, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  options.content_type = 'json';\n  return call_api(\"post\", \"resources/search\", params, callback, options);\n};\n\nexports.update_resources_access_mode_by_prefix = function update_resources_access_mode_by_prefix(access_mode, prefix, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return updateResourcesAccessMode(access_mode, \"prefix\", prefix, callback, options);\n};\n\nexports.update_resources_access_mode_by_tag = function update_resources_access_mode_by_tag(access_mode, tag, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return updateResourcesAccessMode(access_mode, \"tag\", tag, callback, options);\n};\n\nexports.update_resources_access_mode_by_ids = function update_resources_access_mode_by_ids(access_mode, ids, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return updateResourcesAccessMode(access_mode, \"public_ids[]\", ids, callback, options);\n};\n\n/**\n * Creates a new metadata field definition\n *\n * @see https://cloudinary.com/documentation/admin_api#create_a_metadata_field\n *\n * @param {Object}   field    The field to add\n * @param {Function} callback Callback function\n * @param {Object}   options  Configuration options\n *\n * @return {Object}\n */\nexports.add_metadata_field = function add_metadata_field(field, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = pickOnlyExistingValues(field, \"external_id\", \"type\", \"label\", \"mandatory\", \"default_value\", \"validation\", \"datasource\");\n  options.content_type = \"json\";\n  return call_api(\"post\", [\"metadata_fields\"], params, callback, options);\n};\n\n/**\n * Returns a list of all metadata field definitions\n *\n * @see https://cloudinary.com/documentation/admin_api#get_metadata_fields\n *\n * @param {Function} callback Callback function\n * @param {Object}   options  Configuration options\n *\n * @return {Object}\n */\nexports.list_metadata_fields = function list_metadata_fields(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return call_api(\"get\", [\"metadata_fields\"], {}, callback, options);\n};\n\n/**\n * Deletes a metadata field definition.\n *\n * The field should no longer be considered a valid candidate for all other endpoints\n *\n * @see https://cloudinary.com/documentation/admin_api#delete_a_metadata_field_by_external_id\n *\n * @param {String}   field_external_id  The external id of the field to delete\n * @param {Function} callback           Callback function\n * @param {Object}   options            Configuration options\n *\n * @return {Object}\n */\nexports.delete_metadata_field = function delete_metadata_field(field_external_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"delete\", [\"metadata_fields\", field_external_id], {}, callback, options);\n};\n\n/**\n * Get a metadata field by external id\n *\n * @see https://cloudinary.com/documentation/admin_api#get_a_metadata_field_by_external_id\n *\n * @param {String}   external_id  The ID of the metadata field to retrieve\n * @param {Function} callback     Callback function\n * @param {Object}   options      Configuration options\n *\n * @return {Object}\n */\nexports.metadata_field_by_field_id = function metadata_field_by_field_id(external_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"get\", [\"metadata_fields\", external_id], {}, callback, options);\n};\n\n/**\n * Updates a metadata field by external id\n *\n * Updates a metadata field definition (partially, no need to pass the entire object) passed as JSON data.\n * See {@link https://cloudinary.com/documentation/admin_api#generic_structure_of_a_metadata_field Generic structure of a metadata field} for details.\n *\n * @see https://cloudinary.com/documentation/admin_api#update_a_metadata_field_by_external_id\n *\n * @param {String}   external_id  The ID of the metadata field to update\n * @param {Object}   field        Updated values of metadata field\n * @param {Function} callback     Callback function\n * @param {Object}   options      Configuration options\n *\n * @return {Object}\n */\nexports.update_metadata_field = function update_metadata_field(external_id, field, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = pickOnlyExistingValues(field, \"external_id\", \"type\", \"label\", \"mandatory\", \"default_value\", \"validation\", \"datasource\");\n  options.content_type = \"json\";\n  return call_api(\"put\", [\"metadata_fields\", external_id], params, callback, options);\n};\n\n/**\n * Updates a metadata field datasource\n *\n * Updates the datasource of a supported field type (currently only enum and set), passed as JSON data. The\n * update is partial: datasource entries with an existing external_id will be updated and entries with new\n * external_id’s (or without external_id’s) will be appended.\n *\n * @see https://cloudinary.com/documentation/admin_api#update_a_metadata_field_datasource\n *\n * @param {String}   field_external_id    The ID of the field to update\n * @param {Object}   entries_external_id  Updated values for datasource\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\nexports.update_metadata_field_datasource = function update_metadata_field_datasource(field_external_id, entries_external_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var params = pickOnlyExistingValues(entries_external_id, \"values\");\n  options.content_type = \"json\";\n  return call_api(\"put\", [\"metadata_fields\", field_external_id, \"datasource\"], params, callback, options);\n};\n\n/**\n * Deletes entries in a metadata field datasource\n *\n * Deletes (blocks) the datasource entries for a specified metadata field definition. Sets the state of the\n * entries to inactive. This is a soft delete, the entries still exist under the hood and can be activated again\n * with the restore datasource entries method.\n *\n * @see https://cloudinary.com/documentation/admin_api#delete_entries_in_a_metadata_field_datasource\n *\n * @param {String}   field_external_id    The ID of the metadata field\n * @param {Array}    entries_external_id  An array of IDs of datasource entries to delete\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\nexports.delete_datasource_entries = function delete_datasource_entries(field_external_id, entries_external_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  options.content_type = \"json\";\n  var params = { external_ids: entries_external_id };\n  return call_api(\"delete\", [\"metadata_fields\", field_external_id, \"datasource\"], params, callback, options);\n};\n\n/**\n * Restores entries in a metadata field datasource\n *\n * Restores (unblocks) any previously deleted datasource entries for a specified metadata field definition.\n * Sets the state of the entries to active.\n *\n * @see https://cloudinary.com/documentation/admin_api#restore_entries_in_a_metadata_field_datasource\n *\n * @param {String}   field_external_id    The ID of the metadata field\n * @param {Array}    entries_external_id  An array of IDs of datasource entries to delete\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\nexports.restore_metadata_field_datasource = function restore_metadata_field_datasource(field_external_id, entries_external_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  options.content_type = \"json\";\n  var params = { external_ids: entries_external_id };\n  return call_api(\"post\", [\"metadata_fields\", field_external_id, \"datasource_restore\"], params, callback, options);\n};\n\n/**\n * Sorts metadata field datasource. Currently supports only value\n * @param {String}   field_external_id    The ID of the metadata field\n * @param {String}   sort_by              Criteria for the sort. Currently supports only value\n * @param {String}   direction            Optional (gets either asc or desc)\n * @param {Function} callback             Callback function\n * @param {Object}   options              Configuration options\n *\n * @return {Object}\n */\nexports.order_metadata_field_datasource = function order_metadata_field_datasource(field_external_id, sort_by, direction, callback) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  options.content_type = \"json\";\n  var params = { order_by: sort_by, direction: direction };\n  return call_api(\"post\", [\"metadata_fields\", field_external_id, \"datasource\", \"order\"], params, callback, options);\n};"]},"metadata":{},"sourceType":"script"}