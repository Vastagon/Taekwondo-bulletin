{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/taekwondo-bulletin/src/client/components/EventsCreatePage.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"./Navbar\";\nimport \"../EventsCreatePage.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsCreatePage() {\n  _s();\n\n  // const [eventFormInfo, setEventFormInfo] = useState({eventName:\"\",eventDescription:\"\",eventTime:\"\",eventDate:new Date(), eventSlots:0, eventImg:`${Math.random(0,20)}${new Date()}`})\n  const [eventFormInfo, setEventFormInfo] = useState({\n    eventName: \"\",\n    eventDescription: \"\",\n    eventTime: \"\",\n    eventDate: new Date(),\n    eventSlots: 0,\n    eventImg: Math.random(0, 20) + new Date()\n  });\n  const [startDate, setStartDate] = useState(new Date());\n  let formData = new FormData();\n  const [droppedImage, setDroppedImage] = useState(false);\n  const [testImage, setTestImage] = useState({\n    image: \"\"\n  });\n  formData.append(\"api_key\", \"336683864383724\");\n  formData.append(\"file\", testImage.image);\n  formData.append(\"upload_preset\", \"zi4rfynp\");\n  formData.append(\"public_id\", eventFormInfo.eventImg);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      const reader = new FileReader();\n      const imageResult = acceptedFiles[0];\n      formData.append(\"file\", testImage.image);\n\n      reader.onload = () => {\n        setTestImage({\n          image: reader.result\n        });\n      };\n\n      reader.readAsDataURL(imageResult); // reader.onload = () =>{\n      //     setEventFormInfo((prevInfo) =>({\n      //         ...prevInfo,\n      //         eventImage: reader.result\n      //     }))\n      // }\n      // reader.readAsDataURL(imageResult)\n      // setEventFormInfo((prevInfo) =>({\n      //     ...prevInfo,\n      //     eventImage: acceptedFiles.map((file) => Object.assign(file, {\n      //         preview: URL.createObjectURL(file)\n      //     }))\n      // }))\n    }\n  });\n\n  function uploadImage() {\n    ///https://api.cloudinary.com/v1_1/demo/image/upload\n    // console.log(files[0].preview)\n    // axios.post(\"cloudinary://336683864383724:8MbNKmImBmB1XfLn5v0PFnmYR6M@dg9s57jo8\", testImage.image)\n    // axios.post(\"http://localhost:5000/addimage/add\", testImage)        \n    axios.post(\"https://api.cloudinary.com/v1_1/zi4rfynp/image/upload\", formData).then(res => console.log(res));\n  } ///Handles styling when an image is dropped\n\n\n  useEffect(() => {\n    imageDropped();\n  }, [eventFormInfo.eventImg]);\n\n  function imageDropped() {\n    setDroppedImage(prev => !prev);\n\n    if (droppedImage) {\n      document.getElementById('drag-file-text').style.display = \"none\";\n    } else {\n      document.getElementById('drag-file-text').style.display = \"relative\";\n    }\n  }\n\n  function createEventFormSubmit(e) {\n    e.preventDefault();\n    uploadImage();\n    setEventFormInfo(prevInfo => {\n      var _formData$data;\n\n      return { ...prevInfo,\n        eventImg: formData === null || formData === void 0 ? void 0 : (_formData$data = formData.data) === null || _formData$data === void 0 ? void 0 : _formData$data.public_id\n      };\n    });\n    axios.post(\"http://localhost:5000/eventsinfo/add\", eventFormInfo).then(res => console.log(res.data));\n    document.getElementById(\"eventName\").value = \"\";\n    document.getElementById(\"eventDescription\").value = \"\";\n    document.getElementById(\"eventSlots\").value = \"\";\n    document.getElementById(\"eventTime\").value = \"\";\n    document.getElementById(\"dropbox-image\").src = \"\"; // window.location.reload()\n  }\n\n  function handleEventsFormChange(e) {\n    setEventFormInfo(prev => ({ ...prev,\n      [e.target.name]: e.target.value // eventImg: formData?.data?.public_id\n\n    }));\n    console.log(Array.from(formData));\n  } ///+eventFormInfo.eventName.toString()\n  // console.log(testImage.image)\n\n\n  console.log(eventFormInfo); // console.log(`ID: ${formData?.data?.public_id}`)\n  // console.log(formData)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createEventFormSubmit,\n      className: \"create-events-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-events-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"eventName\",\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          onChange: handleEventsFormChange,\n          id: \"eventName\",\n          name: \"eventName\",\n          className: \"create-events-input\",\n          type: \"text\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-events-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"eventDescription\",\n          children: \"Event Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"eventDescription\",\n          required: true,\n          onChange: handleEventsFormChange,\n          name: \"eventDescription\",\n          className: \"create-events-input\",\n          type: \"text\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-events-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"eventSlots\",\n          children: \"Total Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"eventSlots\",\n          onChange: handleEventsFormChange,\n          name: \"eventSlots\",\n          className: \"create-events-input\",\n          type: \"number\",\n          placeholder: \"Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-events-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"eventTime\",\n          children: \"Event Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"eventTime\",\n          required: true,\n          onChange: handleEventsFormChange,\n          name: \"eventTime\",\n          className: \"create-events-input\",\n          type: \"text\",\n          placeholder: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-events-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"date-picker\",\n          children: \"Event Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"date-picker\",\n          className: \"date-picker\",\n          selected: eventFormInfo.eventDate,\n          onChange: date => setEventFormInfo(prevInfo => ({ ...prevInfo,\n            eventDate: date\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-bottom-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-drop\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"dropbox-image\",\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), !droppedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image-preview\",\n              src: testImage.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              id: \"img-drop-icon\",\n              className: \"img-drop-icon\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"50\",\n              height: \"43\",\n              viewBox: \"0 0 50 43\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M48.4 26.5c-.9 0-1.7.7-1.7  1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5  6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"drag-file-text\",\n              children: \"Drag a file, or click the box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"events-form-submit\",\n          type: \"submit\",\n          children: \"Submit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: eventFormInfo.eventDate.toUTCString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventsCreatePage, \"fdIEXuxrF9dbFwb9NRjx5pmv6tM=\", false, function () {\n  return [useDropzone];\n});\n\n_c = EventsCreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsCreatePage\");","map":{"version":3,"sources":["/home/jacob/Code/taekwondo-bulletin/src/client/components/EventsCreatePage.js"],"names":["Navbar","useState","useEffect","useDropzone","axios","DatePicker","v4","uuid","EventsCreatePage","eventFormInfo","setEventFormInfo","eventName","eventDescription","eventTime","eventDate","Date","eventSlots","eventImg","Math","random","startDate","setStartDate","formData","FormData","droppedImage","setDroppedImage","testImage","setTestImage","image","append","getRootProps","getInputProps","accept","onDrop","acceptedFiles","reader","FileReader","imageResult","onload","result","readAsDataURL","uploadImage","post","then","res","console","log","imageDropped","prev","document","getElementById","style","display","createEventFormSubmit","e","preventDefault","prevInfo","data","public_id","value","src","handleEventsFormChange","target","name","Array","from","date","toUTCString"],"mappings":"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","sourcesContent":["import Navbar from \"./Navbar\"\nimport \"../EventsCreatePage.css\"\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {useState, useEffect} from \"react\"\nimport {useDropzone} from \"react-dropzone\"\nimport axios from \"axios\"\nimport DatePicker from \"react-datepicker\"\nimport {v4 as uuid} from \"uuid\"\n\n\nexport default function EventsCreatePage(){\n    // const [eventFormInfo, setEventFormInfo] = useState({eventName:\"\",eventDescription:\"\",eventTime:\"\",eventDate:new Date(), eventSlots:0, eventImg:`${Math.random(0,20)}${new Date()}`})\n    const [eventFormInfo, setEventFormInfo] = useState({eventName:\"\",eventDescription:\"\",eventTime:\"\",eventDate:new Date(), eventSlots:0, eventImg:Math.random(0,20)+ new Date()})\n    const [startDate, setStartDate] = useState(new Date())\n    let formData = new FormData()\n       \n    const [droppedImage, setDroppedImage] = useState(false)\n    const [testImage, setTestImage] = useState({image: \"\"})\n    formData.append(\"api_key\", \"336683864383724\")\n    formData.append(\"file\", testImage.image)\n    formData.append(\"upload_preset\", \"zi4rfynp\") \n    formData.append(\"public_id\", eventFormInfo.eventImg)\n\n    const {getRootProps, getInputProps} = useDropzone({\n        accept: \"image/*\",\n        onDrop: (acceptedFiles) => {\n            const reader = new FileReader()\n            const imageResult = acceptedFiles[0]\n            formData.append(\"file\", testImage.image)\n\n            reader.onload = () =>{\n                setTestImage({image: reader.result})\n            }\n            reader.readAsDataURL(imageResult)\n\n            // reader.onload = () =>{\n            //     setEventFormInfo((prevInfo) =>({\n            //         ...prevInfo,\n            //         eventImage: reader.result\n            //     }))\n            // }\n            // reader.readAsDataURL(imageResult)\n\n            \n            // setEventFormInfo((prevInfo) =>({\n            //     ...prevInfo,\n            //     eventImage: acceptedFiles.map((file) => Object.assign(file, {\n            //         preview: URL.createObjectURL(file)\n            //     }))\n            // }))\n        }\n    })\n\n    function uploadImage(){\n        ///https://api.cloudinary.com/v1_1/demo/image/upload\n        // console.log(files[0].preview)\n        // axios.post(\"cloudinary://336683864383724:8MbNKmImBmB1XfLn5v0PFnmYR6M@dg9s57jo8\", testImage.image)\n        // axios.post(\"http://localhost:5000/addimage/add\", testImage)        \n\n        axios.post(\"https://api.cloudinary.com/v1_1/zi4rfynp/image/upload\", formData)\n        .then(res => console.log(res))\n    }\n\n\n///Handles styling when an image is dropped\n    useEffect(() =>{\n        imageDropped()\n    }, [eventFormInfo.eventImg])\n    function imageDropped(){\n        setDroppedImage(prev => !prev)\n        if(droppedImage){\n            document.getElementById('drag-file-text').style.display = \"none\"\n        }else{\n            document.getElementById('drag-file-text').style.display = \"relative\"\n        }\n    }\n    \n    function createEventFormSubmit(e){\n        e.preventDefault()        \n        uploadImage()\n\n        setEventFormInfo((prevInfo) => ({\n            ...prevInfo,\n            eventImg: formData?.data?.public_id\n        }))\n\n        axios.post(\"http://localhost:5000/eventsinfo/add\", eventFormInfo)\n        .then(res => console.log(res.data))\n\n        document.getElementById(\"eventName\").value = \"\"\n        document.getElementById(\"eventDescription\").value = \"\"\n        document.getElementById(\"eventSlots\").value = \"\"\n        document.getElementById(\"eventTime\").value = \"\"\n        document.getElementById(\"dropbox-image\").src = \"\"\n        // window.location.reload()\n    }\n    function handleEventsFormChange(e){\n\n        setEventFormInfo(prev =>({\n            ...prev,\n            [e.target.name]: e.target.value,\n            // eventImg: formData?.data?.public_id\n        }))\n\n        console.log(Array.from(formData))\n    }///+eventFormInfo.eventName.toString()\n\n    // console.log(testImage.image)\n    console.log(eventFormInfo)\n    // console.log(`ID: ${formData?.data?.public_id}`)\n    // console.log(formData)\n    return(\n        <div>\n            <Navbar />\n            <form onSubmit={createEventFormSubmit} className=\"create-events-form\">\n                <div className=\"create-events-input\">\n                    <label className=\"form-label\" htmlFor=\"eventName\">Event Name</label>\n                    <input required onChange={handleEventsFormChange} id=\"eventName\" name=\"eventName\" className=\"create-events-input\" type=\"text\" placeholder=\"Title\"></input>\n                </div>\n                <div className=\"create-events-input\">\n                    <label className=\"form-label\" htmlFor=\"eventDescription\">Event Description</label>\n                    <input id=\"eventDescription\" required onChange={handleEventsFormChange} name=\"eventDescription\" className=\"create-events-input\" type=\"text\" placeholder=\"Description\" />\n                </div>\n                <div className=\"create-events-input\">\n                    <label className=\"form-label\" htmlFor=\"eventSlots\">Total Slots</label>\n                    <input id=\"eventSlots\" onChange={handleEventsFormChange} name=\"eventSlots\" className=\"create-events-input\" type=\"number\" placeholder=\"Slots\" />\n                </div>\n                <div className=\"create-events-input\">\n                    <label  className=\"form-label\" htmlFor=\"eventTime\">Event Time</label>\n                    <input id=\"eventTime\" required onChange={handleEventsFormChange} name=\"eventTime\" className=\"create-events-input\" type=\"text\" placeholder=\"Time\" />\n                </div>\n                <div className=\"create-events-input\">\n                    <label className=\"form-label\" htmlFor=\"date-picker\">Event Date</label>\n                    <DatePicker id=\"date-picker\" className=\"date-picker\" selected={eventFormInfo.eventDate} onChange={(date) => setEventFormInfo(prevInfo => ({\n                        ...prevInfo,\n                        eventDate: date\n                    }))} />\n                </div>\n                \n  \n\n                <div className=\"form-bottom-row\">\n                    <div className=\"img-drop\">\n                        <div {...getRootProps()}>\n                            <input id=\"dropbox-image\" {...getInputProps()} />\n                            {!droppedImage ? <img className=\"image-preview\" src={testImage.image}></img> \n                            :\n                            <svg id=\"img-drop-icon\" className=\"img-drop-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"43\" viewBox=\"0 0 50 43\">\n                            <path d=\"M48.4 26.5c-.9 0-1.7.7-1.7 \n                            1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 \n                            6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z\"></path>\n                            </svg>\n                            }\n                            <p id=\"drag-file-text\">Drag a file, or click the box</p>                            \n                        </div>\n\n                    </div>\n                        <button className=\"events-form-submit\" type=\"submit\">Submit Event</button>\n                </div>\n                <p>{eventFormInfo.eventDate.toUTCString()}</p>\n            </form>      \n            <div>    \n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}